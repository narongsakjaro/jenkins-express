pipeline {
    agent any  // Run on any available agent

    environment {
        NODE_VERSION = '18'  // Change this based on your Node.js version
        DOCKER_IMAGE = 'my-node-app'
        CONTAINER_NAME = 'my-node-container'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/narongsakjaro/jenkins-express.git'
            }
        }

        stage('Setup Node.js') {
            steps {
                script {
                    // Install Node.js if it's not already installed
                    def nodeInstalled = sh(script: 'node -v || echo "not found"', returnStdout: true).trim()
                    if (nodeInstalled.contains("not found")) {
                        sh 'curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash -'
                        sh 'apt-get install -y nodejs'
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        // stage('Run Tests') {
        //     steps {
        //         sh 'npm test'
        //     }
        // }

        // stage('Build Application') {
        //     steps {
        //         sh 'npm run build'  // Modify if needed
        //     }
        // }

        stage('Dockerize & Deploy') {
            steps {
                script {
                    // Build Docker image
                    docker.build('my-node-app')

                    // Stop and remove the container if it's running
                    // def container = docker ps -q -f name=my-node-container
                    // if (container) {
                        docker.stop('my-node-container')
                        docker.rm('my-node-container')
                    // }

                    // Run the Docker container
                    docker.run('-d -p 3000:3000 --name my-node-container my-node-app')
                }
            }
        }
    }

    post {
        success {
            echo '✅ Build and deployment successful!'
        }
        failure {
            echo '❌ Build or deployment failed!'
        }
    }
}
